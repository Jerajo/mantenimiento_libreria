//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mvcLibreria
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LibHCEntities : DbContext
    {
        public LibHCEntities()
            : base("name=LibHCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AutoresSet> AutoresSets { get; set; }
        public virtual DbSet<CategoriasSet> CategoriasSets { get; set; }
        public virtual DbSet<ClientesSet> ClientesSets { get; set; }
        public virtual DbSet<CredencialesSet> CredencialesSets { get; set; }
        public virtual DbSet<DireccionSet> DireccionSets { get; set; }
        public virtual DbSet<HistorialPrestamoSet> HistorialPrestamoSets { get; set; }
        public virtual DbSet<LibroAutorSet> LibroAutorSets { get; set; }
        public virtual DbSet<LibroEjemplarSet> LibroEjemplarSets { get; set; }
        public virtual DbSet<LibrosSet> LibrosSets { get; set; }
        public virtual DbSet<VariablesSet> VariablesSets { get; set; }
        public virtual DbSet<vwGenerosLibrosCount> vwGenerosLibrosCounts { get; set; }
    
        public virtual int spDeleteGenero(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteGenero", iDParameter);
        }
    
        public virtual int spInsertLibro(string isbn, string titulo, string pais, Nullable<int> stock, string editorial, Nullable<int> genero)
        {
            var isbnParameter = isbn != null ?
                new ObjectParameter("isbn", isbn) :
                new ObjectParameter("isbn", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            var editorialParameter = editorial != null ?
                new ObjectParameter("Editorial", editorial) :
                new ObjectParameter("Editorial", typeof(string));
    
            var generoParameter = genero.HasValue ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertLibro", isbnParameter, tituloParameter, paisParameter, stockParameter, editorialParameter, generoParameter);
        }
    
        public virtual int spNewGenero(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spNewGenero", nameParameter);
        }
    
        public virtual int spUpdateGenre(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateGenre", idParameter, nameParameter);
        }
    }
}
